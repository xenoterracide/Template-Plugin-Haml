NAME
    Template::Plugin::Haml

VERSION
    version 0.1.0

SYNOPSIS
            [%- USE Haml -%]
            [%- FILTER haml -%]
            %p Hello World
            [%- END -%]
        
        <p>Hello World</p>

DESCRIPTION
    A thin wrapper around Text::Haml when you load the plugin it creates a
    filter called haml that you can use in a normal way. A full descritption
    of the Haml language can be found at "/haml-lang.com/"" in <a
    href="http:haml-lang.com</a>>. Haml is a terse and whitespace sensitive
    html, xhtml, and xml templating system. Compared to Template Toolkit
    however it is relatively limited in what you can do. It by itself
    contains no includes, conditionals, or loop constructs. So I've combined
    it here with TT to make writing those kinds of templates with even less
    code easier.

  EXAMPLE
   input template
wrapper.tt
            !!! 5
            %html
            [% content %]

    hello.tt

            [%- message='Hello World' %]
            [%- USE Haml -%]
            [%- WRAPPER wrapper.tt | haml -%]
            [%- FILTER haml -%]
             %head
              %meta{:charset => "utf-8"}
              %title hello
             %body
              %p [% message %]
              %ul
              [%- total=0; WHILE total < 5 %]
               %li [% total=total+1 %][% total %]
              [%- END -%]
            [%- END -%]

    I'd like to draw some attention to the while loop here you have to have
    the -'s in just the right spots to make it work because of Haml's
    whitespace sensitivity.

    It's also important to note that <tags> will be </closed> in the
    templates they're in. If you used PROCESS instead of WRAPPER above your
    template would be output like

            ...
            <html></html>
             <head>
            ...

    instead of...

   Output
            <!DOCTYPE html>
            <html>
             <head>
              <meta charset='utf-8' />
              <title>hello</title>
             </head>
             <body>
              <p>hello world</p>
              <ul>
               <li>1</li>
               <li>2</li>
               <li>3</li>
               <li>4</li>
               <li>5</li>
              </ul>
             </body>
            </html>

  Methods
    init
        initializes the the filter object

    filter
        method that acutally does the transformation

ACKNOWLEDGEMENTS
    Thanks to kd, mst, Khisanth, aef on irc://irc.perl.org/tt for helping me
    figure out why my first try didn't work

BUGS
    HAML variables don't work
        use TT style variables instead

AUTHOR
    Caleb Cushing <xenoterracide@gmail.com>

COPYRIGHT AND LICENSE
    This software is Copyright (c) 2010 by Caleb Cushing.

    This is free software, licensed under:

      The Artistic License 2.0

